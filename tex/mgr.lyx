#LyX 1.5.0 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass mwbk
\begin_preamble
\usepackage{fix-cm}

\usepackage{type1ec}
\usepackage[T1]{fontenc}


\usepackage[pdftex,man,opt]{wmstitle}
\usepackage[bookmarks, bookmarksopen=true, bookmarksnumbered=true, colorlinks=true, pdftitle={System sterowania robotem mobilnym}, pdfauthor={Michał Fita}]{hyperref}

\usepackage[protrusion=true,expansion=true, tracking=true, spacing=true, kerning=true, selected=true, babel=true]{microtype}
\end_preamble
\options wide,pdftex
\language polish
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize 12
\spacing onehalf
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3.5cm
\topmargin 2cm
\rightmargin 2.1cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle uheadings
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
promotorJeden{dr inż.
 Roman Krasowski}
\end_layout

\begin_layout Standard


\backslash
nralbumuJeden{209034}
\end_layout

\begin_layout Standard


\backslash
authorJeden{Michał Fita}
\end_layout

\begin_layout Standard


\backslash
promotorDwa{}
\end_layout

\begin_layout Standard


\backslash
nralbumuDwa{}
\end_layout

\begin_layout Standard


\backslash
authorDwa{}
\end_layout

\end_inset


\end_layout

\begin_layout Title
System sterowania robotem
\end_layout

\begin_layout Author
Michał Fita
\end_layout

\begin_layout Standard
\begin_inset LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter*
Wstęp
\end_layout

\begin_layout Standard
Niedocenianym obszarem współczesnej inżynierii jest robotyka.
 Łączy ona w sobie wiedzę z dziedziny elektroniki, automatyki, mechaniki
 oraz inżynierii oprogramowania.
 Wielu nawet dziś uważa robotykę za zabawę, a nie poważną dziedzinę badawczo--ro
zwojową.
 Lecz sukcesy takich projektów jak Mars Pathfinder czy DARPA Grand Challanger
 pokazują rosnące znaczenie robotyki we współczesnym świecie.
 Bill Gates powiedział: 
\begin_inset Quotes eld
\end_inset

Wiek XX był erą komputerów, wiek XXI będzie erą robotów
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Przedmiotem pracy jest sterownik mikroprocesorowy oraz zestaw oprogramowania
 dla sterownika oraz współpracującego komputera PC.
 Platformą mechaniczną jest robot zabawka Robo--Actor, który ma służyć do
 demonstracji działania układu i oprogramowania stworzonych w ramach tej
 pracy.
 W kolejnych rozdziałach zostały opisane tematy teoretyczne oraz zadania
 realizowane w celu konstrukcji sterownika oraz stworzenia oprogramowania
 zarówno sterownika mikroprocesorowego oraz systemu kontrolnego dla komputera
 PC.
\end_layout

\begin_layout Standard
Praca została podzielona na dwie logiczne części, z której pierwsza omawia
 teoretyczne zagadnienia związane z tematem robotyki i technologii stosowanych
 w realizacji projektu, a część druga opisuje praktyczną realizację wszystkich
 elementów z opisem kroków prowadzących do wyboru stosowanych rozwiązań.
 Wśród opisywanych tematów znajdują się przede wszystkim systemy wbudowane,
 systemy operacyjne czasu rzeczywstego, radiowa transmisja danych, sterowanie
 silników elektrycznych oraz przetwarzanie obrazu.
\end_layout

\begin_layout Standard
Układ sterownika mikroprocesorowego został zrealizowany na platformie AVR32
 firmy Atmel.
 Jest to rodzina 32 bitowych mikrokontrolerów występująca w dwóch głównych
 odmianach, lekkiej odmianie UC3 dla mocno zintegrowanych rozwiązań, oraz
 AP7 -- odmianie wysokowydajnych mikrokontrolerów dla zaawansowanych aplikacji
 przenośnych, mogący między innymi pracować pod kontrolą systemu Linux.
 Istotną przewagą oferty firmy Atmel i układów AVR32 nad układami innych
 producentów jest bardzo silne wsparcie dla amatorów oraz środowiska otwartego
 oprogramowania.
\end_layout

\begin_layout Part
Teoria
\end_layout

\begin_layout Chapter
Interfejsy
\end_layout

\begin_layout Section
Interfejs JTAG
\end_layout

\begin_layout Standard
Interfejs JTAG jest uznanym światowym standardem sprzętowego sprzęgu mikroproces
orów i układów programowalnych ze stanowiskiem pracy inżyniera, czyli komputera
 PC.
 Popularnie używany skrót JTAG od nazwy Joint Test Action Group to historyczna
 zaszłość z 1985 roku, gdy powołano grupę przemysłową do opracowania metod
 testowania płytek drukowanych na etapie postprodukcji.
 Założeniem grupy było opracowanie mechanizmu pozwalającego na testowanie
 połączeń z dowolnej nóżki złożonego układu scalonego po ścieżce poprowadzonej
 po płytce drukowanej.
 W roku 1990 metoda ta została zatwierdzona jako standard IEEE 1149.1
\begin_inset LatexCommand cite
key "jtag-std"

\end_inset

.
 Tego samego roku INTEL włożył obsługę tego standardu do procesora 80486.
 Zastosowana metoda testowania pozwalała weryfikować elektryczne połączenia
 na płytce drukowanej z otoczeniem układu, stąd nosi nazwę skanowania graniczneg
o (ang.
 
\shape italic
boundary-scan
\shape default
).
 Polega ona na zastosowaniu pojedynczych bramek (ang.
 
\shape italic
Boundary Scan Cells
\shape default
) na wszystkich nóżkach sygnałowych układu scalonego, które mogą być wymuszane
 w stan logiczny zero lub jeden, mogą odczytywać stan logiczny nóżki podawany
 z zewnątrz lub w trakcie normalnej pracy układu pozostawać nieaktywne i
 odizolowane od wyprowadzenia.
 Łańcuch takich bramek tworzy rejestr (ang.
 
\shape italic
Boundary Scan Register
\shape default
), który współpracuje z dodatkowymi rejestrami instrukcji i danych.
 W dziesiejszych czasach znaczenie interfejsu IEEE 1149.1 i wszelkich jego
 pochodnych specyficznych dla różnych producentów ma tak naprawdę największe
 znaczenie na etapie przygotowywania oprogramowania dla urządzeń wyposażonych
 w mikrokontrolery.
 O ile architetkura sprzętowa szeregowej komunikacji z wewnętrznymi układami
 mikrokontrolerów została zachowana to każdy producent stosuje swoje rozszerzeni
a i wymaga własnego oprogramowania do sterowania interfejsem, które umożliwia
 programowanie pamięci flash w układach oraz przeprowadzanie złożonego procesu
 uruchomieniowego wspomaganego przez sprzętowe pułapki.
 Programowanie układów scalonych z zastosowaniem tej metody (ale nie tylko)
 nazywa się programowaniem w systemie (ang.
 
\emph on
in-system programming
\emph default
, w skrócie ISP).
 Przykłady wielu mikrokontrolerów 8-bitowych pokazują, że ISP nie wumaga
 istnienia pełnego IEEE 1149.1 a wymaga tylko dostarczenia wyprowadzeń pozwalając
y szeregowo programować pamięć Flash lub sieć bramek wewnątrz układu scalonego
 (tak robi ATMEL z rodziną układów 8-bitowych i Xilinx dla układów CPLD).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename vector/jtag-internals-01.svg
	lyxscale 50
	height 30pheight%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Schemat-blokowy-implementacji"

\end_inset

Schemat blokowy implementacji JTAG w układzie 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prezentowany na 
\begin_inset LatexCommand ref
reference "fig:Schemat-blokowy-implementacji"

\end_inset

 diagram wewnętrznej architektury JTAG wbudowanej w układzie pokazuje, jak
 pojedyncze wyprowadzenia układu mogą być testowane i ustawiane przez pojedyncze
 komórki rejestru.
 Rejestr ten przypomina klasyczy rejestr przesuwny, przy czym w zależności
 od instrukcji przesłanej na wejście TDI wartość komórki jest odczytywana
 i wyprowadzana poprzed odpowiedź wysyłaną na wyjście TDO, bądź programowana
 wartością przesłaną razem z rozkazem JTAG.
 Obsługa interfejsu odbywa się szeregowo z dużą szybkością, często zbliżoną
 do prędkości pracy układu w gotowym systemie, stąd wymagania dla urządzeń
 obsługujących interfejs zgodny z IEEE 1149.1 we współczesnych układach 32
 bitowych są naprawdę wyśróbowane, co wpływa również na cenę tych urządzeń.
 Jednym z takich urządzeń firmy Atmel jest JTAG ICE mk-II opisywany w rozdziale
 <!-- tu referencja do rozdziału o narzędziach -->.
\end_layout

\begin_layout Standard
Rozszerzenia producentów wbududowane w układ pozwalają na stosowanie JTAG
 do uruchamiania i odpluskwiania programów działających w rzeczywistym systemie
 (ang.
 
\emph on
on-chip debugging
\emph default
).
\end_layout

\begin_layout Standard
Dla wielu producentów cyfrowego sprzętu elektronicznego istnienie wyprowadzeń
 dla JTAG stanowi zagrożenie dla naruszenia dóbr intelektualnych zawartych
 w rozwiązaniach zastosowanych w sprzedawanych urządzeniach.
 Umiejętnie zastosowany JTAG pozwala na przeprowadzanie inżynierii odwrotnej
 układu i oprogramowania w nim zawartego (mimo zabezpieczenia wewnętrznej
 pamięci Flash przed bezpośrednim odczytem).
 Dzięki takim możliwościom, kilka bardzo popularnych urządzeń
\begin_inset Foot
status collapsed

\begin_layout Standard
Popularny router Linksys WRT54G posiada alternatywne oprogramowanie, dostępne
 głównie na http://www.openwrt.org.
\end_layout

\end_inset

 zyskało szerokie grono użytkowników ze środowiska oprogramowania otwartego,
 które tworzy własne wersje oprogramowania o alternatywnych możliwościach.
 Nieliczni producenci zdecydowali się z sukcesem wspierać w pewnym stopniu
 takie działania środowisk użytkowników.
 Im więcej można zrobić z urządzeniem przez modyfikację oprogramowania,
 tym wyższe ceny tych urządzeń są na rynku wtórnym.
\end_layout

\begin_layout Chapter
Mikrokontrolery
\end_layout

\begin_layout Standard
Rozdział opisuje wybrane konstrukcje mikrokontrolerów oferowanych przez
 różnych producentów, których wybór rozważano do zastosowania w projekcie.
 Opis obejmuje szczegóły techniczne konstrukcji oraz aspekty inżynierskie
 związane z zastosowaniem opisywanych układów w praktyce.
\end_layout

\begin_layout Section
\begin_inset LatexCommand label
name "sec:ARM"

\end_inset

ARM
\end_layout

\begin_layout Standard
Firma ARM nie jest producentem układów scalonych mikroprocesorów, lecz zajmuje
 się projektowaniem rdzeni procesorów oraz sprzedażą właśności intelektualnej
 do tych projektów firmom trzecim, głównie uznanym producentom układów mikroproc
esorowych, o których mowa w tym rozdziale.
 Rdzenie serii ARM w kolejnych wcieleniach cieszą się ogromną popularnością
 producentów urządzeń codziennego użytku potrzebujących wysokich wydajności,
 takich jak telefony komórkowe, przenośne odtwarzacze DVD oraz wiele innych.
 Procesory z rdzeniem ARM stanowią około 3/4 rynku sprzedaży dla 32 bitowych
 układów.
\end_layout

\begin_layout Standard
Stosowana w tej chwili nazwa ARM jest akronimem od angieskich słów 
\shape slanted
Advanced RISC Machine
\shape default
, a wcześniej 
\shape slanted
Acorn RISC machine
\shape default
.
 Historia tych procesorów sięga roku 1983, gdy brytyjska firma Acorn Computers
 pracowała nad nowym procesorem dla swoich komputerów.
 Znaczenie komputerów Acorn na brytyjskim rynku w owym czasie, przypominało
 tryumfy komputerów Apple w Stanach Zjednoczonych.
 W latach odpowiednio 1985 i roku następnym, Acorn prezentuje kolejno procesory
 ARM1 i ARM2.
\end_layout

\begin_layout Standard
Cechą szczególną całej rodziny procesorów ARM, w tym również odgałęzień
 jest zestaw instrukcji maszynowych łączących pewne zestawy operacji często
 pojawiających się w kodzie napisanych w językach wyższego poziomu.
 Dzięki czemu, skompilowany kod binarny jest bardzo mały i może być wykonywany
 szybko, mimo niskich częstotliwości zegarów taktujących pracę rdzenia procesora.
 Zachowano przy tym mechanizmy z procesorów RISC, gwarantujące stałą długość
 rozkazu.
 ARM dodatkowo rozszerzyła możliwości rdzeni o technologie 
\shape smallcaps
Thumb
\shape default
, 
\shape smallcaps
Thumb-2
\shape default
 i 
\shape smallcaps
Neon
\shape default
 -- w szczególności ta ostatnia znalazła zastosowanie w implementacji kodeków
 głosowych w telefonach GSM.
\end_layout

\begin_layout Standard
Z architektury ARM wywodzą się takie rodziny procesorów, jak XScale firmy
 Intel -- znajdujący zastosowanie w wielu PDA -- oraz OMAP firmy Texas Instrumen
ts -- wielordzeniowe procesory multimedialne.
\end_layout

\begin_layout Subsection
ARM 3
\end_layout

\begin_layout Subsection
ARM 6
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand label
name "sub:ARM-7"

\end_inset

ARM 7
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand label
name "sub:ARM-9"

\end_inset

ARM 9
\end_layout

\begin_layout Subsection
Jazelle
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
placement r
width "34mm"
status open

\begin_layout Standard
\begin_inset Graphics
	filename images/jazelle_logo.png
	lyxscale 30
	width 30mm

\end_inset


\end_layout

\end_inset

Technologia Jazelle DBX (skrót od ang.
 
\shape slanted
Direct Bytecode eXecution
\shape default
) została opracowana przez ARM w celu przyspieszania sprzętowego pewnych
 operacji bajtkodu maszyny wirtualnej Java (w skrócie JVM).
 Pozwala ona wykonywać bajtkod Javy, jakby był on natywnym kodem procesora.
 Sprzętowa implementacja Jazelle DBX wykonana jest na około 12 tysiącach
 bramek, co oznacza niski koszt implementacji wewnątrz układu.
 Liczba ta jest znacząco mniejsza od liczby bramek typowego koprocesora
 matematycznego.
\end_layout

\begin_layout Standard
Takie podejście wzmocnione przez technologię Jazelle RCT (ang.
 
\shape slanted
Runtime Compilation Target
\shape default
), która wspiera kompilację 
\shape slanted
ahead-of-time
\shape default
 (AOT) i 
\shape slanted
just-in-time
\shape default
 (JIT), pozwala znacząco zwiększyć wydajność aplikacji Java w urządzeniach
 przenośnych, głównie telefonach komórkowych.
 Aktualne możliwości technologii Jazelle RCT sięgają dużo dalej, wspierając
 kompilację i wykonywanie kodu takich platform jak Microsoft.NET, Perl czy
 Python.
 Implementację tej technologii wspierają wszystkie mikroprocesory z rodziny
 ARM Cortex-A
\begin_inset LatexCommand cite
key "jazelle-wp"

\end_inset

.
\end_layout

\begin_layout Section
Freescale
\end_layout

\begin_layout Standard
Firma Freescale
\begin_inset Foot
status collapsed

\begin_layout Standard
Strona producenta: http://www.freescale.com
\end_layout

\end_inset

to korporacja powstała z wydzielenia działu układów scalonych firmy Motorola.
 Układy scalone Motoroli od kilkudziesięciu lat mają uznaną pozycję na rynku
 elektoniki cyfrowej, a udział Motoroli w konsorcjum tworzącym rdzeń PowerPC
 odcisnął duże piętno na tej architekturze.
\end_layout

\begin_layout Standard
Warto również dodać, iż pod koniec lat '80 assembler rodziny mikroprocesorów
 6800 był w Polsce bardzo popularny.
 Procesory te znalazły się w popularnych komputerach Amiga oraz były stosowane
 w wielu urządzeniach.
 Wartość programów w assemblerze dla tych układów była bardzo wysoka, a
 kompilatory języków wysokiego poziomu obarczone były dużym nakładem na
 kodzie wynikowym.
 Osiąganie dobrych wyników w programach graficznych i grach na komputerze
 Amiga osiągano dzięki fragmentom programów pisanych w assemblerze.
\end_layout

\begin_layout Standard
Firma Motorola w latach 1991--2004 wraz z IBM i Apple brała udział w pracach
 konsorcjum tworzącym rdzeń PowerPC.
 W roku 2006, gdy firma Apple zrezygnowała oficjalnie z architektury PowerPC
 na rzecz produktów firmy Intel, konsorcjum zmieniło swój kształt.
 Od 2004 roku, gdy Freescale został wydzielony jako osobny podmiot biznesowy
 z Motoroli, nadal pracował nad udoskonalaniem architektury PowerPC, natomiast
 wycofanie się Apple sprawiło, że świetny skąd inąd PowerPC G5 był ostatnim
 układem zastosowanym w popularnych komputerach użytkowych.
 
\begin_inset Wrap figure
placement r
width "3cm"
status open

\begin_layout Standard
\begin_inset Graphics
	filename images/logo_power_org_black.gif
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset

Aktualnie firmy współpracujące nad architekturą związane są z Power.org
\begin_inset Foot
status open

\begin_layout Standard
Istniejąca od 2004 roku, utworzona przez IBM fundacja na rzecz architektury
 
\shape smallcaps
Power
\shape default
, jej adres internetowy: http://www.power.org.
\end_layout

\end_inset

.
 Organizacja ta zrzesza ponad 40 firm z branży elektroniki i oprogramowania,
 między innymi IBM, Freescale, Synopsys, Cadence, Mentor Graphics, Wind
 River, Xilinx.
 Głównym jej celem jest promowanie platformy dla nowych rozwiązań i wspólne
 badanie nad rozwojem 
\shape smallcaps
Power Architecture
\shape default

\begin_inset LatexCommand cite
key "power.org-vision"

\end_inset

.
\end_layout

\begin_layout Standard
Firma Freescale posiada cztery rodziny mikroprocesorów 32 bitowych, opisane
 krótko w kolejnych podrozdziałach.
\end_layout

\begin_layout Subsection
PowerQUICC
\end_layout

\begin_layout Standard
Układy zaawansowanych mikrokontrolerów na bazie konstrukcji PowerPC rozwijane
 od 1995 roku.
 Cechą szczególną linii PowerQUICC jest wbudowany zaawansowany podsystem
 kontroli komunikacyjnej, odciążającej główny rdzeń układu.
 Dzięki temu nadają się do zastosowań w systemach telekomutacyjnych, takich
 jak routery lub centrale telefoniczne.
 Seria układów PowerQUICC I oznaczana przez symbole MPC8xx były pierwszymi
 układami z rodziny PowerPC produkowanymi przez Motorolę.
 Różnorodne wersje układów różniły się dokładanym wyposażeniem, konfiguracją
 ilości potoków, pamięci cache, obsługiwanymi interfejsami.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Graphics
	filename vector/mpc885-block-diagram.svg
	lyxscale 20
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Schemat blokowy MPC885.
\end_layout

\end_inset


\end_layout

\end_inset

W roku 1998 pojawiły się układy z linii PowerQUICC II oznaczane symbolami
 MPC82xx bazowane na procesorze PowerPC 603e znanym też jako G2 (pojawiły
 się w komupterach firmy Apple).
 Wersja od Motoroli trafiała do stacji bazowych telefonii komórkowej, switchy
 sieciowych i multiplekserów obsługujących abonenckie linie cyfrowe
\begin_inset Foot
status open

\begin_layout Standard
abonencka linia cyfrowa (ang.
 Digital Subscriber Line, DSL) stosowana w telekomunikacji naziemnej do
 oferowania szybkich łącz Internetowych; multiplekser dostępowy DSL to urządzeni
e pozwalające na obsługę sygnału cyfrowego na analogowych liniach abonenckich.
\end_layout

\end_inset

.
 Seria ta została całkowicie zastąpiona przez linię PowerQUICC II Pro produkowan
ą od roku 2004.
\end_layout

\begin_layout Standard
Linia PowerQUICC II Pro bazowała na rozbudowanym rdzeniu, którego pamięć
 cache została zwiększona do 32kB dla instrukcji i 32kB dla danych oraz
 zwiększono maksymalne taktowanie rdzenia.
 Oznaczano ją symbolami MPC83xx, przy czym dodatkowa litera E symbolizowała
 wbudowaną jednostkę szyfrującą.
 Układy te trafiły do urządzeń produkowanych przez firmę Cisco.
\end_layout

\begin_layout Standard
Od roku 2003 firma Freescale oferuje układy z linii PowerQUICC III oparte
 o rdzeń e500, który nie ma odpowiednika w procesorach PowerPC ogólnego
 zastosowania.
 Oznaczane symbolami MPC85xx układy sa specjalizowanymi procesorami komunikacyjn
ymi, zdolnymi obsługiwać wiele portów Gigabit Ethernet jednocześnie, co
 czyni je doskonałymi procesorami dla szybkich switchy.
 W tej linii są układy wielordzeniowe.
\end_layout

\begin_layout Standard
Firma Freescale wspiera projektowanie dla procesorów linii PowerQUICC bogatym
 zestawem nardzędzi, w tym środowiskiem CodeWarrior.
 Narzędzia te są jednak są bardzo drogie.
 Testowe wersje tego oprogramowania mają okrojone możliwości i nie są popularne
 wśród amatorów.
\end_layout

\begin_layout Subsection
ARM
\end_layout

\begin_layout Standard
W rozdziale 
\begin_inset LatexCommand ref
reference "sec:ARM"

\end_inset

 opisane są osiągnięcia firmy ARM w projektowaniu i sprzedaży projektów
 rdzeni mikroprocesorów dla innych firm produkujących układy scalone procesorów
 i mikrokontrolerów.
\end_layout

\begin_layout Subsection
68K/ColdFire
\end_layout

\begin_layout Standard
Rodzina 68K jest najbardziej znaną rodziną mikroprocesorów firmy Motorola,
 a aktualnie Freescale Semiconductor.
 Model MC68000 debiutiował w 1979 roku i mocno zmodyfikowany jest produkowany
 do dnia dziesiejszego.
 Najmocniejszy typ układu w rodzinie MC68060 jest również nadal produkowany
 w kilku odmianach.
 Procesory te znalazły zastosowane w komputerach Atari i Amiga oraz wielu
 urządzeniach powszechnego użytku.
\end_layout

\begin_layout Standard
Układy ColdFire są przekształconą wersją układów rodziny 68K dla zastosowań
 w systemach wbudowanych.
 Są wielokrotnie szybsze niż ich oryginalne odpowiedniki, pracują z częstotliwoś
cią do 300 MHz (w porównaniu z 60 MHz fla MC68060).
 Aktualna zgodność binarna układów ColdFire sprawia, że grupy zapaleńców
 konstruują klony komputerów Atari i Amiga.
 Istnieją również porty systemu Linux dla układów z rodziny 68K
\begin_inset Foot
status open

\begin_layout Standard
Więcej informacji na stronie http://www.linux-m68k.org.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Ostatnia wersja rdzenia ColdFire oznaczana jako V5 jest rdzeniem superskalarnym,
 przy czym do dziś firma Freescale nie rozpoczeła sprzedaży układów z tej
 rodziny.
 Produkowane i sprzedawane układy posiadają nadal rdzeń oznaczany jako V4,
 który nie jest jeszcze w pełni superskalarny.
\end_layout

\begin_layout Subsection
MCORE
\end_layout

\begin_layout Standard
Rodzina MCORE to kilka układów 32-bitowych zaprojektowanych specjalnie do
 specyficznych zastosowań przemysłowych i medycznych.
 Głównym kryterium branym pod uwagę przy konstrukcji tych procesorów była
 energooszczędność oraz obsługa specyficznych interfejsów przydatnych w
 przemyśle (np.
 PWM, ang.
 
\emph on
Pulse Width Modulation
\emph default
).
\end_layout

\begin_layout Section
Atmel
\end_layout

\begin_layout Standard
Firma Atmel oferuje wiele różnych konstrukcji procesorów, z których najpopularni
ejsze to cała rodzina mikrokontrolerów AVR -- 8 bitowych układów o architekturze
 RISC, ciesząca się ogromną popularnością wśród amatorów.
 Wiele projektów elektronicznych dostępnych w internecie opartych jest właśnie
 o układy z tej rodziny.
 Oprócz tego Atmel oferuje szeroką gamę układów opartych o rdzeń ARM.
\end_layout

\begin_layout Subsection
AVR32
\end_layout

\begin_layout Standard
AVR32 to rodzina 32 bitowych mikrokontrolerów produkcji firmy Atmel
\begin_inset Foot
status collapsed

\begin_layout Standard
Strona układów AVR32 u producenta: http://www.atmel.com/products/avr32/
\end_layout

\end_inset

 Oferowane są układy z dwóch głównych odmianach: 
\end_layout

\begin_layout Description
UC3 lżejszej odmianie mikrokontrolera dla dla mocno zintegrowanych rozwiązań
 o niskim poborze energii do kontroli i sterowania, 
\end_layout

\begin_layout Description
AP7 odmianie wysokowydajnych mikrokontrolerów dla zaawansowanych multimedialnych
 aplikacji przenośnych, mogący między innymi pracować pod kontrolą systemu
 operacyjnego Linux.
 
\end_layout

\begin_layout Standard
Istotną przewagą oferty firmy Atmel i układów AVR32 nad układami innych
 producentów jest bardzo silne wsparcie dla amatorów oraz środowiska otwartego
 oprogramowania.
\end_layout

\begin_layout Subsection
ARM
\end_layout

\begin_layout Standard
Układy serii AT91SAM cieszą się coraz większą popularnością, są bardzo dobrze
 udokumentowane przez producenta, który również dostarcza do nich bogatą
 bibliotekę kodu do obsługi wbudowanych w układ interfejsów.
 Dzięki temu implementacje wielu zastosowań tej serii procesorów zajmują
 mniej czasu.
 Ciekawe konstrukcje płyt ewaluacyjnych dla tych układów czynią produkty
 firmy Atmel najciekawszymi w rodzinie układów z rdzeniem ARM.
\end_layout

\begin_layout Standard
Grupy układów AT91SAM7S, AT91SAM7SE, AT91SAM7X oparte są o rdzeń ARM 7 opisany
 w rozdziale 
\begin_inset LatexCommand ref
reference "sub:ARM-7"

\end_inset

.
 Poszczególne wersje różnią się dostępnymi interfejsami oraz wiekościami
 wbudowanej pamięci.
 Układy serii AT91SAM9 bazują na rdzeniu ARM 9 opisanym w rozdziale 
\begin_inset LatexCommand ref
reference "sub:ARM-9"

\end_inset

.
\end_layout

\begin_layout Section
Analog Devices
\end_layout

\begin_layout Standard
Istniejąca od 1965 roku firma Analog Devices zajmuje się projektowaniem
 i produkcją złożonych układów scalonych dla techniki analogowej i cyfrowej.
 Opórcz uznanych wzmacniaczy i przetwoników analogowo-cyfrowych, firma produkuje
 różnego rodzaju sensory (w tym linowy sensor przyspieszenia ADXL3300 zastosowan
y w konsoli do gier Wii firmy Nitendo
\begin_inset LatexCommand cite
key "ad-wii-sensor"

\end_inset

) oraz znaną rodzinę procesorów Blackfin, stosowaną w wielu urządzeniach
 firm takich jak Hitachi czy Roland.
\end_layout

\begin_layout Subsection
Blackfin
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
placement r
width "15col%"
status open

\begin_layout Standard
\begin_inset Graphics
	filename images/BF_chip_100x100.jpg
	scale 50

\end_inset


\end_layout

\end_inset

Mikroprocesory z rdzeniem Blackfin to 16- lub 32-bitowe układy w architekturze
 RISC.
 Potok przetwarzania jest 10 etapowy, a konstrukcje jednostek arytmetycznych,
 stawiają architekturę Blackfin wśród procesorów DSP.
 Pełne wsparcie SIMD pozwala na wydajne przetwarzanie multimedialne obrazu
 wideo oraz dźwięku.
 Procesor ten powstał jako rozwinięcie starszej architektury SHARC firmy
 Analog Devices i architektury XScale firmy Intel.
 Wewnętrzna budowa układów Blackfin oparta jest o architekturę harvardzką.
 Dwie 16-bitowe jednostki MAC, dwie 40-bitowe jednoski arytmetyczno-logiczne,
 dwie 40-bitowe <barrel shifter> pozwalają wykonać do trzech instrukcji
 w jednym cyklu zegara, przy odpowiedniej optymalizacji.
 Lokuje to procesory Blackfin w rodzinie DSP.
 Ochrona pamięci (MPU), różne poziomy operacji (użytkownik, jądro), operacje
 jednocyklowe, pamięć podręczna instrukcji i danych oraz zestaw instrukcji
 do testów bitu, dostępu do bajtu, słowa lub liczby całkowitej i do zintegrowany
ch "peryferiów" czynią ten układ procesorem RISC.
 Lista instrukcji (16-biotwych dla zwykłych operacji i 32- lub 64-bitowych
 dla operacji DSP) tego procesora obejmuje bardzo złożone operacje, co czyni
 skompilowany kod binarny bardzo wydajnym i wysoce zoptymalizwoanym.
 Do wad układów Blackfin trzeba zaliczyć brak jedostki zarządzania pamięcią
 (MMU) i obsługi wirtualizacji.
 Układ ten najczęściej jest stosowanych w urządzeniach audio-video do użytku
 codziennego oraz w profesjonalnych urządzeniach wysokiej jakości przetwarzający
ch dźwięk lub obraz.
 
\end_layout

\begin_layout Subsection
TigerSHARC
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
placement r
width "15col%"
status collapsed

\begin_layout Standard
\begin_inset Graphics
	filename images/TS_chip_100x100.jpg
	scale 50

\end_inset


\end_layout

\end_inset

Procesory TigerSHARK są podobnie jak układy Blackfin połączeniem konstrukcji
 DSP z wydajną architekturą RISC, jednakże ogromny nacisk położono na architektu
rę wieloprocesorową.
 Bardzo duża wewnętrzna pamięć pozwala przetważać FFT nawet do 64.000 punktów,
 a bardzo szybkie szyny wewnętrze i zewnętrzne pozwalają uzyskiwać ogromne
 moce przetwarzania strumieni danych.
\end_layout

\begin_layout Standard
Układy te są stosowane szeroko w urządzeniach infrastruktury telefonii 3G
 oraz w militarnych systemach obronnych, na przykład radarach lotniczych.
\end_layout

\begin_layout Subsection
SHARC
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
placement r
width "15col%"
status collapsed

\begin_layout Standard
\begin_inset Graphics
	filename images/sharc_chip_100x100.jpg
	scale 50

\end_inset


\end_layout

\end_inset

Układy SHARC (nazwa od ang.
 
\shape slanted
Super Harvard Architecture Single-Chip Computer
\shape default
) to wydajne procesory DSP o architekturze RISC, których pierwsze konstrukcje
 sięgają roku 1994.
 Są wzorcem dla nowszych układów TigerSHARC i Blackfin.
\end_layout

\begin_layout Standard
Szerokość słowa rozkazu tych procesorów do 48 bitów, a liczby całkowitej
 i pojedynczej precyzji 32 bity.
 Rozrzeszona obsługa liczb zmienno-przecinkowych rozszerzona jest do 40
 bitów.
 SHARC nie posiada wbudowanego MMU.
 Dwa identyczne zestawy rejestrów ogólnego stosowania pozwalają na realizację
 bardzo szybkiego przełączania kontekstu.
 Współpraca pomiędzy wieloma procesorami w systemie może być realizowana
 szeregowo, gdyż SHARC oferują wiele niezależnych interfejsów szeregowych
 na pojedynczym układzie.
\end_layout

\begin_layout Part
Realizacja praktyczna
\end_layout

\begin_layout Standard
Testing
\end_layout

\begin_layout Standard
\begin_inset LatexCommand bibtex
options "plplain"
bibfiles "literatura"

\end_inset


\end_layout

\end_body
\end_document
